# Runs all tests and creates a coverage report
name: Coverage

on:  # Runs on all push events to master branch and any push related to a pull request
  push:
    branches:
      - master
  pull_request:

env:
  UV_COMPILE_BYTECODE: 1
  ALLOWED_COVERAGE_DECREASE: 0.05  # allowed change from reference coverage
  MIN_COVERAGE: 0.80               # minimum overall coverage
  MIN_DIFF_COVERAGE: 0.50          # minimum coverage for the diff in a PR

defaults:
  run:
    shell: bash

jobs:
  coverage:
    runs-on: ubuntu-latest
    env:
        python-version: "3.13"

    steps:
      - uses: actions/checkout@v5

      - name: Install uv and Python
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ env.python-version }}
          enable-cache: true
          activate-environment: true
          cache-dependency-glob: '**/pyproject.toml'

      # The uv pip should make & use an env from the Python install of the previous step
      - name: Install package
        run: uv pip install '.[test]'

      - name: Run all tests
        run: python -m pytest --cov=cpymad_lhc

      - name: Coverage comment
        id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}

      # Optionally, you can also upload the coverage report as an artifact
      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@v4
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt

      - name: Coverage Decrease Calculation
        id: coverage_decrease
        env:
           REF_PCT: ${{ steps.coverage_comment.outputs.reference_percent_covered }}
        run: echo "min_allowed=$((${REF_PCT} - (${ALLOWED_COVERAGE_DECREASE})))" >> "$GITHUB_OUTPUT"

      - name: Check Coverage Decrease
        if: ${{ steps.coverage_comment.outputs.new_percent_covered < steps.coverage_decrease.outputs.min_allowed }}
        env:
           MIN_ALLOWED: ${{ steps.coverage_decrease.outputs.min_allowed }}
           CURRENT_PCT: ${{ steps.coverage_comment.outputs.new_percent_covered }}
        run: echo "Coverage decreased more than allowed ($((${CURRENT_PCT}*100))% < $((${MIN_ALLOWED} * 100))%)." && exit 1

      - name: Minumum Coverage Check
        if: ${{ steps.coverage_comment.outputs.new_percent_covered < env.MIN_COVERAGE }}
        env:
           CURRENT_PCT: ${{ steps.coverage_comment.outputs.new_percent_covered }}
        run: echo "Coverage is below minimum ($((${CURRENT_PCT}*100))% < $((${MIN_COVERAGE}*100))%)." && exit 1

      - name: Minimum Diff Coverage Check
        if: ${{ steps.coverage_comment.outputs.diff_percent_covered < env.MIN_DIFF_COVERAGE }}
        env:
            DIFF_PCT: ${{ steps.coverage_comment.outputs.diff_percent_covered }}
        run: echo "Diff coverage is below minimum ($((${DIFF_PCT}*100))% < $((${MIN_DIFF_COVERAGE}*100))%)." && exit 1
